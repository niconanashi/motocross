"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fs = require("fs");
var path = require("path");
var commander = require("commander");
var akashic_cli_commons_1 = require("@akashic/akashic-cli-commons");
var stat = require("./stat");
function statSize(logger, param) {
    var basepath = param.cwd || process.cwd();
    akashic_cli_commons_1.ConfigurationFile.read(path.join(basepath, "game.json"), logger)
        .then(function (game) {
        return stat.size({
            logger: logger,
            basepath: basepath,
            game: game,
            limit: param.limit,
            raw: !!param.raw
        });
    })
        .catch(function (err) { return errorExit(logger, err); });
}
function errorExit(logger, message) {
    logger.error(message);
    process.exit(1);
}
var version = JSON.parse(fs.readFileSync(path.resolve(__dirname, "..", "package.json"), "utf8")).version;
commander
    .description("Show statistics information")
    .version(version)
    .usage("size [options]")
    .option("-C, --cwd <dir>", "The directory incluedes game.json")
    .option("-q, --quiet", "Suppress output")
    .option("-l, --limit <limit>", "Limit size")
    .option("--raw", "Raw mode. Result will not contain logger prefix.");
function cli(param) {
    var logger = new akashic_cli_commons_1.ConsoleLogger({ quiet: param.quiet });
    var target = param.args.length > 0 ? param.args[0] : "(empty)";
    switch (target) {
        case "size":
            statSize(logger, param);
            break;
        default:
            commander.help();
            break;
    }
}
function run(argv) {
    commander.parse(argv);
    cli(commander);
}
exports.run = run;
