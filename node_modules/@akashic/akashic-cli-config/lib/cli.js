"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fs = require("fs");
var path = require("path");
var commander = require("commander");
var akashic_cli_commons_1 = require("@akashic/akashic-cli-commons");
var config = require("./config");
/**
 * akashic cli configを実行する
 *
 * この関数は複数回呼ばれるべきではない
 */
function run(argv) {
    var packageJson = JSON.parse(fs.readFileSync(path.resolve(__dirname, "..", "package.json"), "utf8"));
    commander
        .description("List and edit configurations")
        .version(packageJson.version)
        .usage("<command> [argument]");
    commander
        .command("get [target]")
        .description("get configuration from your .akashicrc")
        .action(function (target, opts) {
        if (opts === void 0) { opts = {}; }
        var logger = new akashic_cli_commons_1.ConsoleLogger({ quiet: opts.quiet });
        config.getConfigItem(null, target).then(function (value) { return logger.print(value); });
    });
    commander
        .command("set [target] [value]")
        .description("set configuration to your .akashicrc")
        .action(function (target, value, opts) {
        if (opts === void 0) { opts = {}; }
        config.setConfigItem(null, target, value);
    });
    commander
        .command("delete [target]")
        .description("delete configuration from your .akashicrc")
        .action(function (target, opts) {
        if (opts === void 0) { opts = {}; }
        config.deleteConfigItem(null, target);
    });
    commander
        .command("list")
        // akashicrcの仕様を定義する validator が出来るまで --all は実装できない
        // .option("-a, --all", "List all items")
        .description("list configuration from your .akashicrc")
        .action(function (opts) {
        if (opts === void 0) { opts = {}; }
        var logger = new akashic_cli_commons_1.ConsoleLogger({ quiet: opts.quiet });
        config.listConfigItems(logger);
    });
    commander.parse(argv);
    if (!/^(get|set|delete|list)$/.test(argv[2])) {
        commander.help();
    }
}
exports.run = run;
