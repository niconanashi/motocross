"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fs = require("fs");
var path = require("path");
var commander = require("commander");
var akashic_cli_commons_1 = require("@akashic/akashic-cli-commons");
var bundle_1 = require("./bundle");
function cli(param) {
    var logger = new akashic_cli_commons_1.ConsoleLogger({ quiet: param.quiet });
    Promise.resolve()
        .then(function () { return bundle_1.promiseExportZip({
        bundle: param.bundle,
        minify: param.minify,
        strip: param.strip,
        source: param.cwd,
        dest: param.output,
        hashLength: !param.hashFilename ? 0 : (param.hashFilename === true) ? 20 : Number(param.hashFilename),
        logger: logger
    }); })
        .catch(function (err) {
        logger.error(err);
        process.exit(1);
    });
}
var ver = JSON.parse(fs.readFileSync(path.resolve(__dirname, "..", "package.json"), "utf8")).version;
commander
    .version(ver);
commander
    .description("Export an Akashic game to a zip file")
    .option("-C, --cwd <dir>", "A directory containing a game.json (default: .)")
    .option("-q, --quiet", "Suppress output")
    .option("-o, --output <fileName>", "Name of output file (default: game.zip)")
    .option("-s, --strip", "Contain only files refered by game.json")
    .option("-M, --minify", "Minify JavaScript files")
    .option("-H, --hash-filename [length]", "Rename asset files with their hash values")
    .option("-b, --bundle", "Bundle script assets into a single file");
function run(argv) {
    commander.parse(argv);
    cli({
        cwd: commander["cwd"],
        quiet: commander["quiet"],
        output: commander["output"],
        strip: commander["strip"],
        minify: commander["minify"],
        hashFilename: commander["hashFilename"],
        bundle: commander["bundle"]
    });
}
exports.run = run;
