"use strict";
var fs = require("fs");
var path = require("path");
var commander = require("commander");
var akashic_cli_commons_1 = require("@akashic/akashic-cli-commons");
var init_1 = require("./init");
var listTemplates_1 = require("./listTemplates");
function cli(param) {
    var logger = new akashic_cli_commons_1.ConsoleLogger({ quiet: param.quiet });
    var initParam = { cwd: param.cwd, type: param.type, logger: logger, forceCopy: param.force };
    {
        Promise.resolve()
            .then(function () {
            if (param.list) {
                return listTemplates_1.listTemplates(initParam);
            }
            return init_1.promiseInit(initParam);
        })
            .catch(function (err) {
            logger.error(err, err.cause);
            process.exit(1);
        });
    }
}
var ver = JSON.parse(fs.readFileSync(path.resolve(__dirname, "..", "package.json"), "utf8")).version;
commander
    .version(ver);
commander
    .description("Generate project skeleton and initialize game.json.")
    .option("-C, --cwd <dir>", "The directory to initinialize")
    .option("-q, --quiet", "Suppress output")
    .option("-r, --registry <regname>", "Template registery to search template")
    .option("-t, --type <type>", "Type of template")
    .option("-l, --list", "Display available template list")
    .option("-f, --force", "If files to be copied already exist, overwrite them");
function run(argv) {
    commander.parse(argv);
    cli(commander);
}
exports.run = run;
//# sourceMappingURL=cli.js.map