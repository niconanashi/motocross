import { GameConfiguration } from "./GameConfiguration";
export declare const ERROR_FILENAME_CONFLICT = "ERROR_FILENAME_CONFLICT";
export declare const ERROR_PATH_INCLUDE_ANCESTOR = "ERROR_PATH_INCLUDE_ANCESTOR";
/**
 * 与えられたファイルパスのファイル名部分を、ファイルパスから計算したハッシュ値で置き換え、 files/ 以下のファイルパスにして返す
 * @param filepath 変換するファイルパス
 * @param nameLength ファイル名の文字数の最大値
 */
export declare function hashFilepath(filepath: string, nameLength: number): string;
/**
 * アセット・ globalScripts のファイル名をファイルパスに基づいてハッシュ化し、アセットファイル名をリネームする
 * @param content 読み込む game.json
 * @param basedir 読み込む gamejson が置かれているパス
 * @param maxHashLength ハッシュ化後のファイル名の文字数の最大値。省略された場合、20文字
 */
export declare function renameAssetFilenames(content: GameConfiguration, basedir: string, maxHashLength?: number): void;
export declare function _removeDirectoryIfEmpty(dirpaths: string[], basedir: string): void;
/**
 * ディレクトリの相対パスを受け取り、そのパス内で表現されているもっとも祖先にあたるディレクトリまでの各祖先ディレクトリをリストで返す
 */
export declare function _listAncestorDirNames(dirpaths: string[]): string[];
